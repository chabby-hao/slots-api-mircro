// Code generated by goctl. DO NOT EDIT!
// Source: activity.proto

package activityclient

import (
	"context"

	"activity/activity"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ActivityInfo       = activity.ActivityInfo
	ListAllRequest     = activity.ListAllRequest
	ListAllResponse    = activity.ListAllResponse
	ListByTypeRequest  = activity.ListByTypeRequest
	ListByTypeResponse = activity.ListByTypeResponse

	Activity interface {
		ListAll(ctx context.Context, in *ListAllRequest, opts ...grpc.CallOption) (*ListAllResponse, error)
		ListByType(ctx context.Context, in *ListByTypeRequest, opts ...grpc.CallOption) (*ListByTypeResponse, error)
	}

	defaultActivity struct {
		cli zrpc.Client
	}
)

func NewActivity(cli zrpc.Client) Activity {
	return &defaultActivity{
		cli: cli,
	}
}

func (m *defaultActivity) ListAll(ctx context.Context, in *ListAllRequest, opts ...grpc.CallOption) (*ListAllResponse, error) {
	client := activity.NewActivityClient(m.cli.Conn())
	return client.ListAll(ctx, in, opts...)
}

func (m *defaultActivity) ListByType(ctx context.Context, in *ListByTypeRequest, opts ...grpc.CallOption) (*ListByTypeResponse, error) {
	client := activity.NewActivityClient(m.cli.Conn())
	return client.ListByType(ctx, in, opts...)
}
